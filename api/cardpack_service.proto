syntax = "proto3";

package crusty.cards.api;

import "api/model.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

// Enables users to create cardpacks containing black and white cards.
//
// Resources:
// - DefaultCardpack: Top-level resource, contain sets of cards that can be used in games
// - DefaultBlackCard: Belong to a DefaultCardpack and act like a black card from Cards Against Humanity
// - DefaultWhiteCard: Belong to a DefaultCardpack and act like a white card from Cards Against Humanity
// - CustomCardpack: Belong to a user, contain sets of cards that can be used in games
// - CustomBlackCard: Belong to a CustomCardpack and act like a black card from Cards Against Humanity
// - CustomWhiteCard: Belong to a CustomCardpack and act like a white card from Cards Against Humanity
//
// ( -- See resource proto documentation for more information. -- )
service CardpackService {
  // ( ---------------------- )
  // ( -- Standard Methods -- )
  // ( ---------------------- )

  // Creates a CustomCardpack.
  rpc CreateCustomCardpack (CreateCustomCardpackRequest) returns (CustomCardpack) {
    option (google.api.http) = {
      post: "/v1/{parent=users/*}/cardpacks"
      body: "custom_cardpack"
    };
    option (google.api.method_signature) = "parent,custom_cardpack";
  };

  // Returns a CustomCardpack.
  rpc GetCustomCardpack (GetCustomCardpackRequest) returns (CustomCardpack) {
    option (google.api.http) = {
      get: "/v1/{name=users/*/cardpacks/*}"
    };
    option (google.api.method_signature) = "name";
  };

  // Lists CustomCardpacks.
  rpc ListCustomCardpacks (ListCustomCardpacksRequest) returns (ListCustomCardpacksResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=users/*}/cardpacks"
    };
    option (google.api.method_signature) = "parent";
    option (google.api.method_signature) = "parent,page_token";
    option (google.api.method_signature) = "parent,page_size,page_token,show_deleted";
  };

  // Updates a CustomCardpack.
  rpc UpdateCustomCardpack (UpdateCustomCardpackRequest) returns (CustomCardpack) {
    option (google.api.http) = {
      patch: "/v1/{custom_cardpack.name=users/*/cardpacks/*}"
      body: "custom_cardpack"
    };
    option (google.api.method_signature) = "custom_cardpack,update_mask";
  };

  // Soft deletes a CustomCardpack. Deleted CustomCardpacks can be undeleted
  // for 30 days before they are permanently removed.
  // Deleted CustomCardpacks cannot be modified, they can only be
  // viewed and undeleted.
  rpc DeleteCustomCardpack (DeleteCustomCardpackRequest) returns (CustomCardpack) {
    option (google.api.http) = {
      delete: "/v1/{name=users/*/cardpacks/*}"
    };
    option (google.api.method_signature) = "name";
  };

  // Creates a CustomBlackCard.
  rpc CreateCustomBlackCard (CreateCustomBlackCardRequest) returns (CustomBlackCard) {
    option (google.api.http) = {
      post: "/v1/{parent=users/*/cardpacks/*}/blackCards"
      body: "custom_black_card"
    };
    option (google.api.method_signature) = "parent,custom_black_card";
  };

  // Creates a CustomWhiteCard.
  rpc CreateCustomWhiteCard (CreateCustomWhiteCardRequest) returns (CustomWhiteCard) {
    option (google.api.http) = {
      post: "/v1/{parent=users/*/cardpacks/*}/whiteCards"
      body: "custom_white_card"
    };
    option (google.api.method_signature) = "parent,custom_white_card";
  };

  // Lists CustomBlackCards.
  rpc ListCustomBlackCards (ListCustomBlackCardsRequest) returns (ListCustomBlackCardsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=users/*/cardpacks/*}/blackCards"
    };
    option (google.api.method_signature) = "parent";
    option (google.api.method_signature) = "parent,page_token";
    option (google.api.method_signature) = "parent,page_size,page_token,show_deleted";
  };

  // Lists CustomWhiteCards.
  rpc ListCustomWhiteCards (ListCustomWhiteCardsRequest) returns (ListCustomWhiteCardsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=users/*/cardpacks/*}/whiteCards"
    };
    option (google.api.method_signature) = "parent";
    option (google.api.method_signature) = "parent,page_token";
    option (google.api.method_signature) = "parent,page_size,page_token,show_deleted";
  };

  // Updates a CustomBlackCard.
  rpc UpdateCustomBlackCard (UpdateCustomBlackCardRequest) returns (CustomBlackCard) {
    option (google.api.http) = {
      patch: "/v1/{custom_black_card.name=users/*/cardpacks/*/blackCards/*}"
      body: "custom_black_card"
    };
    option (google.api.method_signature) = "custom_black_card,update_mask";
  };

  // Updates a CustomWhiteCard.
  rpc UpdateCustomWhiteCard (UpdateCustomWhiteCardRequest) returns (CustomWhiteCard) {
    option (google.api.http) = {
      patch: "/v1/{custom_white_card.name=users/*/cardpacks/*/whiteCards/*}"
      body: "custom_white_card"
    };
    option (google.api.method_signature) = "custom_white_card,update_mask";
  };

  // Soft deletes a CustomBlackCard. Deleted CustomBlackCards can be undeleted
  // for 30 days before they are permanently removed.
  // Deleted CustomBlackCards cannot be modified, they can only be
  // viewed and undeleted.
  rpc DeleteCustomBlackCard (DeleteCustomBlackCardRequest) returns (CustomBlackCard) {
    option (google.api.http) = {
      delete: "/v1/{name=users/*/cardpacks/*/blackCards/*}"
    };
    option (google.api.method_signature) = "name";
  };

  // Soft deletes a CustomWhiteCard. Deleted CustomWhiteCards can be undeleted
  // for 30 days before they are permanently removed.
  // Deleted CustomWhiteCards cannot be modified, they can only be
  // viewed and undeleted.
  rpc DeleteCustomWhiteCard (DeleteCustomWhiteCardRequest) returns (CustomWhiteCard) {
    option (google.api.http) = {
      delete: "/v1/{name=users/*/cardpacks/*/whiteCards/*}"
    };
    option (google.api.method_signature) = "name";
  };

  // Creates a batch of CustomBlackCards.
  // This operation is atomic. Partial writes are not supported.
  rpc BatchCreateCustomBlackCards (BatchCreateCustomBlackCardsRequest) returns (BatchCreateCustomBlackCardsResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=users/*/cardpacks/*}/blackCards:batchCreate"
      body: "*"
    };
  };

  // Creates a batch of CustomWhiteCards.
  // This operation is atomic. Partial writes are not supported.
  rpc BatchCreateCustomWhiteCards (BatchCreateCustomWhiteCardsRequest) returns (BatchCreateCustomWhiteCardsResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=users/*/cardpacks/*}/whiteCards:batchCreate"
      body: "*"
    };
  };

  // Returns a DefaultCardpack.
  rpc GetDefaultCardpack (GetDefaultCardpackRequest) returns (DefaultCardpack) {
    option (google.api.http) = {
      get: "/v1/{name=defaultCardpacks/*}"
    };
    option (google.api.method_signature) = "name";
  };

  // Lists DefaultCardpacks.
  rpc ListDefaultCardpacks (ListDefaultCardpacksRequest) returns (ListDefaultCardpacksResponse) {
    option (google.api.http) = {
      get: "/v1/defaultCardpacks"
    };
    option (google.api.method_signature) = "page_token";
    option (google.api.method_signature) = "page_size,page_token";
  };

  // Lists DefaultBlackCards.
  rpc ListDefaultBlackCards (ListDefaultBlackCardsRequest) returns (ListDefaultBlackCardsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=defaultCardpacks/*}/blackCards"
    };
    option (google.api.method_signature) = "parent";
    option (google.api.method_signature) = "parent,page_token";
    option (google.api.method_signature) = "parent,page_size,page_token";
  };

  // Lists DefaultWhiteCards.
  rpc ListDefaultWhiteCards (ListDefaultWhiteCardsRequest) returns (ListDefaultWhiteCardsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=defaultCardpacks/*}/whiteCards"
    };
    option (google.api.method_signature) = "parent";
    option (google.api.method_signature) = "parent,page_token";
    option (google.api.method_signature) = "parent,page_size,page_token";
  };

  // ( -------------------- )
  // ( -- Custom Methods -- )
  // ( -------------------- )

  // Undeletes a CustomCardpack, returning it to its previous state.
  // Deleted CustomCardpacks can be undeleted for 30 days before they
  // are permanently removed. To view deleted CustomCardpacks, use
  // the ListCustomCardpacks rpc with `show_deleted` set to true.
  rpc UndeleteCustomCardpack (UndeleteCustomCardpackRequest) returns (CustomCardpack);

  // Undeletes a CustomBlackCard, returning it to its previous state.
  // Deleted CustomBlackCards can be undeleted for 30 days before they
  // are permanently removed. To view deleted CustomBlackCards, use
  // the ListCustomBlackCards rpc with `show_deleted` set to true.
  rpc UndeleteCustomBlackCard (UndeleteCustomBlackCardRequest) returns (CustomBlackCard);

  // Undeletes a CustomWhiteCard, returning it to its previous state.
  // Deleted CustomWhiteCards can be undeleted for 30 days before they
  // are permanently removed. To view deleted CustomWhiteCards, use
  // the ListCustomWhiteCards rpc with `show_deleted` set to true.
  rpc UndeleteCustomWhiteCard (UndeleteCustomWhiteCardRequest) returns (CustomWhiteCard);

  rpc ListFavoritedCustomCardpacks (ListFavoritedCustomCardpacksRequest) returns (ListFavoritedCustomCardpacksResponse);

  // Adds CustomCardpack to a User's favorites list.
  // To view favorited custom cardpacks, use the ListFavoritedCustomCardpacks rpc.
  rpc LikeCustomCardpack (LikeCustomCardpackRequest) returns (google.protobuf.Empty);

  // Removes CustomCardpack from a User's favorites list.
  // To view favorited custom cardpacks, use the ListFavoritedCustomCardpacks rpc.
  rpc UnlikeCustomCardpack (UnlikeCustomCardpackRequest) returns (google.protobuf.Empty);

  // Returns whether a User has added a CustomCardpack to their favorites.
  rpc CheckDoesUserLikeCustomCardpack (CheckDoesUserLikeCustomCardpackRequest) returns (CheckDoesUserLikeCustomCardpackResponse);
}

// Request message for CreateCustomCardpack.
message CreateCustomCardpackRequest {
  // The parent user.
  // Format: users/{user}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/CustomCardpack"}];

  // The custom cardpack to create.
  CustomCardpack custom_cardpack = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for GetCustomCardpack.
message GetCustomCardpackRequest {
  // The name of the custom cardpack to retrieve.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomCardpack"}];
}

// Request message for ListCustomCardpacks.
message ListCustomCardpacksRequest {
  // The parent user.
  // Format: users/{user}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/CustomCardpack"}];

  // The maximum page size.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Page token returned from a previous rpc.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // Show soft-deleted custom cardpacks instead.
  bool show_deleted = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListCustomCardpacks.
message ListCustomCardpacksResponse {
  // The requested custom cardpacks.
  repeated CustomCardpack custom_cardpacks = 1;

  // Opaque string. Can be passed to a subsequent
  // request to retrieve the next page of items.
  string next_page_token = 2;

  // The total number of items in the list specified in the request.
  int64 total_size = 3;
}

// Request message for UpdateCustomCardpack.
message UpdateCustomCardpackRequest {
  // The custom cardpack to update.
  CustomCardpack custom_cardpack = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteCustomCardpack.
message DeleteCustomCardpackRequest {
  // The name of the custom cardpack to delete.
  // Deleted custom cardpacks are guaranteed to remain available to be undeleted for at least 30 days.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomCardpack"}];
}

// Request message for CreateCustomBlackCard.
message CreateCustomBlackCardRequest {
  // The parent custom cardpack.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/CustomBlackCard"}];

  // The black card to create.
  CustomBlackCard custom_black_card = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for CreateCustomWhiteCard.
message CreateCustomWhiteCardRequest {
  // The parent custom cardpack.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/CustomWhiteCard"}];

  // The white card to create.
  CustomWhiteCard custom_white_card = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for ListCustomBlackCards.
message ListCustomBlackCardsRequest {
  // The parent custom cardpack.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/CustomBlackCard"}];

  // The maximum page size.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Page token returned from a previous rpc.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // Show soft-deleted cards instead.
  bool show_deleted = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListCustomBlackCards.
message ListCustomBlackCardsResponse {
  // The requested cards.
  repeated CustomBlackCard custom_black_cards = 1;

  // Opaque string. Can be passed to a subsequent
  // request to retrieve the next page of items.
  string next_page_token = 2;

  // The total number of items in the list specified in the request.
  int64 total_size = 3;
}

// Request message for ListCustomWhiteCards.
message ListCustomWhiteCardsRequest {
  // The parent custom cardpack.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/CustomWhiteCard"}];

  // The maximum page size.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Page token returned from a previous rpc.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // Show soft-deleted cards instead.
  bool show_deleted = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListCustomWhiteCards.
message ListCustomWhiteCardsResponse {
  // The requested cards.
  repeated CustomWhiteCard custom_white_cards = 1;

  // Opaque string. Can be passed to a subsequent
  // request to retrieve the next page of items.
  string next_page_token = 2;

  // The total number of items in the list specified in the request.
  int64 total_size = 3;
}

// Request message for UpdateCustomBlackCard.
message UpdateCustomBlackCardRequest {
  // The card to update.
  CustomBlackCard custom_black_card = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for UpdateCustomWhiteCard.
message UpdateCustomWhiteCardRequest {
  // The card to update.
  CustomWhiteCard custom_white_card = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for DeleteCustomBlackCard.
message DeleteCustomBlackCardRequest {
  // The name of the black card to delete.
  // Deleted black cards are guaranteed to remain available to be undeleted for at least 30 days.
  // Format: users/{user}/cardpacks/{custom_cardpack}/blackCards/{custom_black_card}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomBlackCard"}];
}

// Request message for DeleteCustomWhiteCard.
message DeleteCustomWhiteCardRequest {
  // The name of the white card to delete.
  // Deleted white cards are guaranteed to remain available to be undeleted for at least 30 days.
  // Format: users/{user}/cardpacks/{custom_cardpack}/whiteCards/{custom_white_card}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomWhiteCard"}];
}

// Request message for BatchCreateCustomBlackCards.
message BatchCreateCustomBlackCardsRequest {
  // The parent resource shared by all cards being created.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  // The `parent` field in all nested request messages
  // must either be empty or match this field.
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomCardpack"}];

  // The request message specifying the resources to create.
  // A maximum of 10000 cards can be created in a batch.
  repeated CreateCustomBlackCardRequest requests = 2;
}

// Response message for BatchCreateCustomBlackCards.
message BatchCreateCustomBlackCardsResponse {
  // Black cards created. Guaranteed to be in the same order as the request.
  repeated CustomBlackCard custom_black_cards = 1;
}

// Request message for BatchCreateCustomWhiteCards.
message BatchCreateCustomWhiteCardsRequest {
  // The parent resource shared by all cards being created.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  // The `parent` field in all nested request messages
  // must either be empty or match this field.
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomCardpack"}];

  // The request message specifying the resources to create.
  // A maximum of 10000 cards can be created in a batch.
  repeated CreateCustomWhiteCardRequest requests = 2;
}

// Response message for BatchCreateCustomWhiteCards.
message BatchCreateCustomWhiteCardsResponse {
  // White cards created. Guaranteed to be in the same order as the request.
  repeated CustomWhiteCard custom_white_cards = 1;
}

// Request message for GetDefaultCardpack.
message GetDefaultCardpackRequest {
  // The name of the default cardpack to retrieve.
  // Format: defaultCardpacks/{default_cardpack}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/DefaultCardpack"}];
}

// Request message for ListDefaultCardpacks. Items are not sorted by any particular field, but rather by importance (i.e. base packs are first, then large expansion packs, etc.).
message ListDefaultCardpacksRequest {
  // The maximum page size.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // Page token returned from a previous rpc.
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListDefaultCardpacks.
message ListDefaultCardpacksResponse {
  // The requested default cardpacks.
  repeated DefaultCardpack default_cardpacks = 1;

  // Opaque string. Can be passed to a subsequent
  // request to retrieve the next page of items.
  string next_page_token = 2;

  // The total number of items in the list specified in the request.
  int64 total_size = 3;
}

// Request message for ListDefaultBlackCards. Items are sorted by `text`.
message ListDefaultBlackCardsRequest {
  // The parent default cardpack.
  // Format: defaultCardpacks/{default_cardpack}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/DefaultBlackCard"}];

  // The maximum page size.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Page token returned from a previous rpc.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListDefaultBlackCards.
message ListDefaultBlackCardsResponse {
  // The requested cards.
  repeated DefaultBlackCard default_black_cards = 1;

  // Opaque string. Can be passed to a subsequent
  // request to retrieve the next page of items.
  string next_page_token = 2;

  // The total number of items in the list specified in the request.
  int64 total_size = 3;
}

// Request message for ListDefaultWhiteCards. Items are sorted by `text`.
message ListDefaultWhiteCardsRequest {
  // The parent default cardpack.
  // Format: defaultCardpacks/{default_cardpack}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/DefaultWhiteCard"}];

  // The maximum page size.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Page token returned from a previous rpc.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListDefaultWhiteCards.
message ListDefaultWhiteCardsResponse {
  // The requested cards.
  repeated DefaultWhiteCard default_white_cards = 1;

  // Opaque string. Can be passed to a subsequent
  // request to retrieve the next page of items.
  string next_page_token = 2;

  // The total number of items in the list specified in the request.
  int64 total_size = 3;
}

// Request message for UndeleteCustomCardpack.
message UndeleteCustomCardpackRequest {
  // The name of the custom cardpack to undelete.
  // Deleted custom cardpacks are guaranteed to remain available to be undeleted for at least 30 days.
  // Format: users/{user}/cardpacks/{custom_cardpack}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomCardpack"}];
}

// Request message for UndeleteCustomBlackCard.
message UndeleteCustomBlackCardRequest {
  // The name of the black card to undelete.
  // Deleted black cards are guaranteed to remain available to be undeleted for at least 30 days.
  // Format: users/{user}/cardpacks/{custom_cardpack}/blackCards/{custom_black_card}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomBlackCard"}];
}

// Request message for UndeleteCustomWhiteCard.
message UndeleteCustomWhiteCardRequest {
  // The name of the white card to undelete.
  // Deleted white cards are guaranteed to remain available to be undeleted for at least 30 days.
  // Format: users/{user}/cardpacks/{custom_cardpack}/whiteCards/{custom_white_card}
  string name = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {type: "api.crusty.cards/CustomWhiteCard"}];
}

// Request message for ListFavoritedCustomCardpacks.
message ListFavoritedCustomCardpacksRequest {
  // The parent user.
  // Format: users/{user}
  string parent = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {child_type: "api.crusty.cards/CustomCardpack"}];

  // The maximum page size.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Page token returned from a previous rpc.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for ListFavoritedCustomCardpacks.
message ListFavoritedCustomCardpacksResponse {
  // The requested custom cardpacks.
  // The user's favorite list contains references to cardpacks, so if
  // a cardpack in the list is deleted, the reference still exists in
  // the user's favorites. When this occurs, a completely empty proto
  // is included in this repeated field. Also, soft-deleted cardpacks
  // do still show up in this list - an empty proto is only used when
  // the cardpack has been permanently deleted.
  repeated CustomCardpack custom_cardpacks = 1;

  // Opaque string. Can be passed to a subsequent
  // request to retrieve the next page of items.
  string next_page_token = 2;
}

// Request message for LikeCustomCardpack.
message LikeCustomCardpackRequest {
  // The user who is liking the custom cardpack.
  string user = 1 [(google.api.resource_reference) = {
    type: "api.crusty.cards/User"
  }];

  // The custom cardpack they are liking.
  string custom_cardpack = 2 [(google.api.resource_reference) = {
    type: "api.crusty.cards/CustomCardpack"
  }];
}

// Request message for UnlikeCustomCardpack.
message UnlikeCustomCardpackRequest {
  // The user who is unliking the custom cardpack.
  string user = 1 [(google.api.resource_reference) = {
    type: "api.crusty.cards/User"
  }];

  // The custom cardpack they are unliking.
  string custom_cardpack = 2 [(google.api.resource_reference) = {
    type: "api.crusty.cards/CustomCardpack"
  }];
}

// Request message for CheckDoesUserLikeCustomCardpack.
message CheckDoesUserLikeCustomCardpackRequest {
  // The user to check.
  string user = 1 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {
    type: "api.crusty.cards/User"
  }];

  // The custom cardpack to check against.
  string custom_cardpack = 2 [(google.api.field_behavior) = REQUIRED, (google.api.resource_reference) = {
    type: "api.crusty.cards/CustomCardpack"
  }];
}

// Response message for CheckDoesUserLikeCustomCardpack.
message CheckDoesUserLikeCustomCardpackResponse {
  // Whether the user has liked the custom cardpack.
  bool is_liked = 1;
}