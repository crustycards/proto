syntax = "proto3";

import "google/protobuf/timestamp.proto";

message User {
  // An opaque id unique to each user.
  // These are generated by the
  // server, never set by an api caller.
  string id = 1;

  // The display name of the user.
  // This can be updated at any time
  // and does not have to be unique.
  string name = 2;

  // When the user was created.
  // This happens the first time
  // an OAuth user signs in.
  google.protobuf.Timestamp create_time = 3;
}

message Cardpack {
  // An opaque id unique to each cardpack.
  // These are generated by the
  // server, never set by the api caller.
  string id = 1;

  // The display name of the cardpack.
  // This can be updated at any time
  // and does not have to be unique.
  string name = 2;

  // The owner of the cardpack.
  // This user has full access
  // to add, modify, or delete any
  // cards in the pack.
  User owner = 3;

  // When the cardpack was created.
  google.protobuf.Timestamp create_time = 4;

  // This field is reset anytime
  // any changes are made to the cardpack
  // including adding, modifying, and
  // deleting cards as well as
  // renaming the cardpack.
  google.protobuf.Timestamp update_time = 5;

  // If this field is not empty, this indicates
  // that the cardpack has been deleted.
  // Cardpacks that have been deleted are
  // guaranteed to remain available to be
  // undeleted for at least 30 days.
  google.protobuf.Timestamp delete_time = 6;

  // How many other users have added
  // the cardpack to their favorites.
  int64 like_count = 7;
}

message BlackCard {
  // This id is unique among all black cards (from all cardpacks).
  // Must not be set when creating cards, since it is created by the server.
  string id = 1;

  // The contents of the card.
  string text = 2;

  // The number of white cards that should be played when this card is used.
  int32 answer_fields = 3;

  // The cardpack this card belongs to.
  string cardpack_id = 4; // TODO - Possibly rename to parent_id.
}

message WhiteCard {
  // This id is unique among all white cards (from all cardpacks).
  // Must not be set when creating cards, since it is created by the server.
  string id = 1;

  // The contents of the card.
  string text = 2;

  // The cardpack this card belongs to.
  string cardpack_id = 3; // TODO - Possibly rename to parent_id.
}