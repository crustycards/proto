syntax = "proto3";

import "model.proto";

message GetOrCreateUserRequest {
  string default_name = 1; // This field is discarded if the user already exists.
  string oauth_id = 2;
  string oauth_provider = 3;
}

message GetOrCreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  // Cannot set id along with oauth data.
  string id = 1;

  // The oauth_id and oauth_provider
  // must both be set or unset.
  string oauth_id = 2;
  string oauth_provider = 3;
}

message GetUserResponse {
  User user = 1;
}

message EditUserRequest {
  string user_id = 1;
  string name = 2;
}

message EditUserResponse {
  User user = 1;
}

message AddFriendRequest {
  string user_id = 1;
  string friend_id = 2;
}

message AddFriendResponse {
}

message RemoveFriendRequest {
  string user_id = 1;
  string friend_id = 2;
}

message RemoveFriendResponse {
}

message GetFriendRequestsSentRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message GetFriendRequestsSentResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_size = 3;
}

message GetFriendRequestsReceivedRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message GetFriendRequestsReceivedResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_size = 3;
}

message GetFriendsRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message GetFriendsResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_size = 3;
}

message SearchUsersRequest {
  string query = 1;
  int32 max_results = 2;
}

message SearchUsersResponse {
  repeated User users = 1;
}

message SearchUsersAutocompleteRequest {
  string query = 1;
  int32 max_results = 2;
}

message SearchUsersAutocompleteResponse {
  repeated string autocomplete_entry = 1;
}

message GetProfileImageRequest {
  string user_id = 1;
}

message GetProfileImageResponse {
  bytes image = 1;
}

message SetProfileImageRequest {
  string user_id = 1;
  bytes image = 2;
}

message SetProfileImageResponse {
}

service UserService {
  rpc GetOrCreateUser(GetOrCreateUserRequest) returns (GetOrCreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc EditUser(EditUserRequest) returns (EditUserResponse);
  rpc AddFriend(AddFriendRequest) returns (AddFriendResponse);
  rpc RemoveFriend(RemoveFriendRequest) returns (RemoveFriendResponse);
  rpc GetFriendRequestsSent(GetFriendRequestsSentRequest) returns (GetFriendRequestsSentResponse);
  rpc GetFriendRequestsReceived(GetFriendRequestsReceivedRequest) returns (GetFriendRequestsReceivedResponse);
  rpc GetFriends(GetFriendsRequest) returns (GetFriendsResponse);
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse);
  rpc SearchUsersAutocomplete(SearchUsersAutocompleteRequest) returns (SearchUsersAutocompleteResponse);
  rpc GetProfileImage(GetProfileImageRequest) returns (GetProfileImageResponse);
  rpc SetProfileImage(SetProfileImageRequest) returns (SetProfileImageResponse);
}